name: Test Stage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.11", "3.12"]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v3
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.*') }}
        restore-keys: |
          ${{ runner.os }}-pip-py${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/requirements.txt -r requirements/requirements-test.txt -r requirements/requirements-dev.txt
    - name: Run PyTest
      run: |
        echo $DOT_ENV_FILE > .env
        python -m pytest
      env:
        DOT_ENV_FILE: ${{ vars.DOT_ENV_FILE }}

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
